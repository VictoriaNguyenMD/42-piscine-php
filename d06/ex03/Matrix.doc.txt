
<- Matrix ----------------------------------------------------------------------
The Matrix class handles 3D points.

An instance can be contructed from an array containing keys:
new Matrix( array( 'present' => val, 
            'scale' => val, 
            'angle' => array(x,y z),
            'vtc' => val,
            'fov' => val,
            'ratio' => val,
            'near' => val,
            'far' => val) );

’preset’: the matrix type to, mandatory. The value must be one of the Class 
constants previoulsy defined.

’scale’: the scale factor, mandatory when ’preset’ is worth SCALE.

’angle’: the rotation angle in radians, mandatory when ’preset’ is worth 
RX, RY or RZ.

’vtc’: translation vector, mandatory when ’preset’ is worth TRANSLATION.
’fov’: projection field of view in degrees mandatory when ’preset’ is worth PROJECTION. 
’ratio’: projected image ratio, mandatory when ’preset’ is worth PROJECTION. 
’near’: projection’s near clipping plane mandatory when ’preset’ is worth PROJECTION. 
’far’: projection’s far clipping plane mandatory when ’preset’ is worth PROJECTION.

Any other use is undefined behaviour.

The class can be converte to verbose using Vertex::$verbose = True;

The class provides the following methods :

Matrix mult( Matrix $rhs ); 
Returns the multiplication of both matrices. 

Vertex transformVertex( Vertex $vtx );
Returns a new vertex resulting from the transformation of the vertex by 
the matrix.
----------------------------------------------------------------------- Matrix ->