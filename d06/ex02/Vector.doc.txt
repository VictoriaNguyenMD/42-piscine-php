
<- Vector ----------------------------------------------------------------------
The Vector class handles x,y,z coordinates in space and corresponding attributes.

An instance can be contructed from an array containing 2 keys:
new Vector( array( 'dest' => val, 'orig' => (x,y z)) );

’dest’: the vector’s destination vertex, mandatory.
’orig’: the vector’s origin vertex, optional, by default is worth a new instance of
the x=0, y=0, z=0, w=1 vertex.

Any other use is undefined behaviour.

The class can be converte to verbose using Vertex::$verbose = True;

The class provides the following methods :

Vector   float magnitude();
Returns the vector’s length (or "norm")

Vector normalize();
Returns a normalized version of the vector. If the vector is
already normalized, returns a fresh copy of the vector.

Vector add( Vector $rhs );
Returns the sum vector of both vectors.

Vector sub( Vector $rhs );
Returns the difference vector of both vectors.

Vector opposite();
Returns the opposite vector.

Vector scalarProduct( $k );
Returns the multiplication of the vector with a scalar.

Vector float dotProduct( Vector $rhs );
Returns the scalar multiplication of both vectors.

Vector float cos( Vector $rhs );
Returns the angle’sAppendix cosine between both vectors.

Vector crossProduct( Vector $rhs );
Returns the cross multiplication of both vectors (right-hand mark!)

----------------------------------------------------------------------- Vector ->